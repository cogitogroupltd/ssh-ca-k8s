## Client side settings

# More commonly changed settings
BatchMode yes # optimistically set as "yes" for the future, but practically may be "no" until it's confirmed that all common workflows don't require prompting
StrictHostKeyChecking yes # may be "ask" in exceptional cases of approving a host, but perhaps the ideal workflow wouldn't need "ask"

# Settings for specific session use cases; set to deny by default, but reasonable to override
ClearAllForwardings yes
ForwardAgent no
ForwardX11 no
GatewayPorts no

# Keepalive settings
ServerAliveInterval 32 # may be 0 at times
TCPKeepAlive no

# Denial of password authentication
KbdInteractiveAuthentication no
PasswordAuthentication no

# Other settings
HashKnownHosts no
UsePrivilegedPort yes # perhaps this is still a remaining/hidden option?
VerifyHostKeyDNS no # optimistically, although may need to set this to ask (unclear how this works for private / self-hosted infrastructure). Doesn't work with proxying ssh connections within local kubernetes cluster, so 'no'

# Cryptography settings (may reduce list of options over time as preferred use converges)
CASignatureAlgorithms rsa-sha2-512,sk-ssh-ed25519@openssh.com
Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com
FingerprintHash sha256
HostKeyAlgorithms rsa-sha2-512,rsa-sha2-512-cert-v01@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com
HostbasedAcceptedAlgorithms rsa-sha2-512,rsa-sha2-512-cert-v01@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com
KexAlgorithms sntrup761x25519-sha512@openssh.com,diffie-hellman-group18-sha512,diffie-hellman-group-exchange-sha256
MACs hmac-sha2-512-etm@openssh.com
PubkeyAcceptedAlgorithms rsa-sha2-512,rsa-sha2-512-cert-v01@openssh.com,sk-ssh-ed25519-cert-v01@openssh.com,sk-ssh-ed25519@openssh.com,ssh-ed25519-cert-v01@openssh.com 

# More fixed settings
#AddKeysToAgent yes | ask | confirm time-int | no # not clear what to put here yet...
#AddressFamily inet6
#BindAddress 10.zt.x.y # can this specify a ZeroTier-only bind address? And, IPv6?
#BindInterface zt_if_id # Can this be a wildcard match on an interface beginning with "z"?
#CanonicalDomains internal # may practically put this as a "public facing" value to get it to work, but I'll present it for now as though I have an internal DNS and domain set up (ideally)
#CanonicalizeFallbackLocal no
#CanonicalizeHostname no
#CanonicalizeMaxDots 3
#CanonicalizePermittedCNAMEs none
CertificateFile filename # I believe important to the workflow
ChallengeResponseAuthentication no
CheckHostIP yes
Compression no
ConnectTimeout 48
ConnectionAttempts 2
#ControlMaster no
#ControlPath /dev/null
#ControlPersist no
EnableSSHKeysign yes # not sure when is needed, but turn off if this is not necessary
ExitOnForwardFailure yes
ForwardX11Timeout 1h
ForwardX11Trusted no
#GSSAPI* and Kerberos options usually compiled out at source level from custom OpenSSH build
GlobalKnownHostsFile /etc/ssh/ssh_known_hosts # For a custom built binary, the actual pathnames in this file may instead be prefixed in /usr/local/src/OpenSSH/...
HostbasedAuthentication no
IPQoS reliability
IdentitiesOnly no # yes as long as it works -- Doesn't work so no
IdentityAgent SSH_AUTH_SOCK
#KnownHostsCommand script # could run a command to decrypt list
NoHostAuthenticationForLocalhost no
NumberOfPasswordPrompts 2
PermitLocalCommand no
PreferredAuthentications publickey
Protocol 2
PubkeyAuthentication yes
RekeyLimit 42M # ideally staggered per host
RevokedHostKeys /etc/ssh/ssh_revoked_host_keys # left empty, owned by root if possible
ServerAliveCountMax 4
#SetEnv # may have some future scoped use, especially if this could be parameterised
StreamLocalBindMask 0177
StreamLocalBindUnlink no
UpdateHostKeys no
UseRoaming no # long since deprecated, but may as well disable explicitly
UserKnownHostsFile ~/.ssh/known_hosts
VisualHostKey no # can be yes, but no is more concise. When jumping, all proxy host keys are displayed if yes

# Other configuration to allow for per-node evaluation or inclusion for modularity (note assh/ssh-cert-authority compatibility foremost, as possible)
#Host ...
#Match ...
#Include conditional_include_file # an option for modularity